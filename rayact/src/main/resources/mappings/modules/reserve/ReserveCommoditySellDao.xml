<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bra.modules.reserve.dao.ReserveCommoditySellDao">

	<sql id="reserveCommoditySellColumns">
		a.id AS "id",
		a.gift_flag AS "giftFlag",
		a.fk_reserve_member_id AS "reserveMember.id",
		a.pay_type AS "payType",
		a.total_sum AS "totalSum",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="reserveCommoditySellJoins">
		left join reserve_member as m on m.id=a.fk_reserve_member_id
	</sql>

	<select id="sellOfToday" resultType="java.math.BigDecimal">
		select SUM(total_sum)
		from reserve_commodity_sell as s
		WHERE  datediff(s.update_date,curdate())=0 and s.tenant_id = #{tenantId}
	</select>

	<select id="findSellOfMonth" resultType="java.math.BigDecimal">
		select SUM(total_sum)
		from reserve_commodity_sell as s
		WHERE s.tenant_id = #{tenantId}  and  Month(s.update_date)=MONTH(CURDATE())
	</select>

	<select id="sellOfChart" resultType="java.util.Map">
		SELECT
		SUM(total_sum) AS "volume",date_format(a.update_date,'%Y-%m-%d') AS "updateDate"
		from reserve_commodity_sell as a
		WHERE a.tenant_id = #{tenantId} and
		<![CDATA[
		DATE_SUB(CURDATE(), INTERVAL 10 DAY) <= date(a.update_date)
		]]>
		GROUP BY
		date_format(a.update_date, '%Y-%m-%d');
	</select>

	<select id="commodityIncomeRatioReport" resultType="java.util.Map">
		SELECT t.name as commodityTypeName, sum(d.detail_sum) as saleAmount
		from reserve_commodity_sell_detail as d ,reserve_commodity_type as t, reserve_commodity as c
		where d.del_flag = #{DEL_FLAG_NORMAL} and d.tenant_id = #{tenantId}
		and d.fk_reserve_commodity_id=c.id and c.commodity_type_id=t.id
		<if test="startDate!=null and endDate !=null">
			and datediff(d.update_date,#{startDate})>=0 and datediff(#{endDate},d.update_date)>=0
		</if>
		GROUP BY commodityTypeName
	</select>

	<select id="incomeReport" resultType="java.util.Map">
		SELECT
		d.id AS "reserveVenue.id",
		d.name AS "reserveVenue.name",
		c.id AS "reserveCommodityType.id",
		c.name AS "reserveCommodityType.name",
		sum(if(pay_type=1,e.total_sum,0)) AS "fieldBillStoredCard",
		sum(if(pay_type=2,e.total_sum,0)) AS "fieldBillCash",
		sum(if(pay_type=3,e.total_sum,0)) AS "fieldBillBankCard",
		sum(if(pay_type=4,e.total_sum,0)) AS "fieldBillWeiXin",
		sum(if(pay_type=5,e.total_sum,0)) AS "fieldBillAliPay",
		sum(if(pay_type=6,e.total_sum,0)) AS "fieldBillOther"
		from reserve_commodity_sell_detail as a, reserve_commodity as b,reserve_commodity_type as c,reserve_venue as d,reserve_commodity_sell as e
		where
		a.fk_reserve_commodity_id=b.id and b.fk_reserve_venue_id=d.id and c.id=b.commodity_type_id and e.id=a.fk_reserve_commodity_sell_id
		GROUP BY d.id,c.id
	</select>

	<select id="get" resultType="ReserveCommoditySell">
		SELECT
		<include refid="reserveCommoditySellColumns"/>
		FROM reserve_commodity_sell a
		<include refid="reserveCommoditySellJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="ReserveCommoditySell">
		SELECT
		<include refid="reserveCommoditySellColumns"/>
		FROM reserve_commodity_sell a
		<include refid="reserveCommoditySellJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL} and tenant_id = #{tenantId}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ReserveCommoditySell">
		SELECT
		<include refid="reserveCommoditySellColumns"/>
		FROM reserve_commodity_sell a
		<include refid="reserveCommoditySellJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL} and tenant_id = #{tenantId}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO reserve_commodity_sell(
			id,
			fk_reserve_member_id ,
			total_sum,
		    gift_flag,
		    pay_type,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			tenant_id
		) VALUES (
			#{id},
			#{reserveMember.id},
			#{totalSum},
			#{giftFlag},
			#{payType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{tenantId}
		)
	</insert>

	<update id="update">
		UPDATE reserve_commodity_sell SET
		    fk_reserve_member_id = #{reserveMember.id},
			total_sum = #{totalSum},
			pay_type = #{payType},
			gift_flag = #{giftFlag},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			tenant_id = #{tenantId}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE reserve_commodity_sell SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>